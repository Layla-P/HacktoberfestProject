@model AddPrViewModel
@{
	ViewData["Title"] = "Add PR";
}

<h1>Add PR</h1>

	<form asp-controller="Home" asp-action="Add" method="post" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
		<div class="form-group">
			<label asp-for="PrUrl" class="block text-gray-700 text-sm font-bold mb-2"></label>
			<input asp-for="PrUrl" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" oninput="processURL()" />
			<span asp-validation-for="PrUrl" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Owner" class="block text-gray-700 text-sm font-bold mb-2"></label>
			<input asp-for="Owner" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
			<span asp-validation-for="Owner" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Repository" class="block text-gray-700 text-sm font-bold mb-2"></label>
			<input asp-for="Repository" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
			<span asp-validation-for="Repository" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="PrNumber" class="block text-gray-700 text-sm font-bold mb-2"></label>
			<input asp-for="PrNumber" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
			<span asp-validation-for="PrNumber" class="text-danger"></span>
		</div>
		<button type="submit" class="bg-blue-700 hover:bg-blue-900 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Add</button>
		<button type="button"
				class="bg-blue-400 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
				onclick="window.location.href='/'">
			Cancel
		</button>
	</form>


@section Scripts{


	<script type="text/javascript">
		function processURL() {
			let prUrl = (document.getElementById("PrUrl")).value;
			let ownerElement = document.getElementById("Owner");
			let repositoryElement = document.getElementById("Repository");
			let prNumberElement = document.getElementById("PrNumber");
			urlRegex = "^https://github.com[/[a-z A-Z 0-9 -]*/[0-9]*";

			if (prUrl.match(urlRegex)) {

				//https://github.com/Layla-P/HacktoberfestProject/pull/20
				let prUrlSubstring = prUrl.replace("https://github.com/", "");
				let prUrlArray = prUrlSubstring.split("/");

				ownerElement.value = prUrlArray[0];
				repositoryElement.value = prUrlArray[1];
				prNumberElement.value = prUrlArray[3];
			}
		}

		$(document).ready(function() {
			var owners = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '/api/Search?owner=%QUERY',
					wildcard: '%QUERY',
					rateLimitWait: 500,
					transform: function (response) {
						return response.content;
					}
				}
			});
			$("#Owner").typeahead(null, {
				name: 'owners',
				display: 'name',
				source: owners
			});
		});
	</script>
}